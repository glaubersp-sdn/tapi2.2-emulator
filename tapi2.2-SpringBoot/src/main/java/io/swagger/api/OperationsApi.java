/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.10).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.TapiCommonGetServiceInterfacePointDetails;
import io.swagger.model.TapiCommonGetServiceInterfacePointList;
import io.swagger.model.TapiConnectivityCreateConnectivityService;
import io.swagger.model.TapiConnectivityGetConnectionDetails;
import io.swagger.model.TapiConnectivityGetConnectionEndPointDetails;
import io.swagger.model.TapiConnectivityGetConnectivityServiceDetails;
import io.swagger.model.TapiConnectivityGetConnectivityServiceList;
import io.swagger.model.TapiConnectivityUpdateConnectivityService;
import io.swagger.model.TapiNotificationCreateNotificationSubscriptionService;
import io.swagger.model.TapiNotificationGetNotificationList;
import io.swagger.model.TapiNotificationGetNotificationSubscriptionServiceDetails;
import io.swagger.model.TapiNotificationGetNotificationSubscriptionServiceList;
import io.swagger.model.TapiNotificationGetSupportedNotificationTypes;
import io.swagger.model.TapiNotificationUpdateNotificationSubscriptionService;
import io.swagger.model.TapiOamCreateOamJob;
import io.swagger.model.TapiOamCreateOamProfile;
import io.swagger.model.TapiOamCreateOamService;
import io.swagger.model.TapiOamCreateOamServicePoint;
import io.swagger.model.TapiOamGetMeg;
import io.swagger.model.TapiOamGetOamJob;
import io.swagger.model.TapiOamGetOamJobList;
import io.swagger.model.TapiOamGetOamProfile;
import io.swagger.model.TapiOamGetOamProfileList;
import io.swagger.model.TapiOamGetOamService;
import io.swagger.model.TapiOamGetOamServiceList;
import io.swagger.model.TapiOamGetOamServicePoint;
import io.swagger.model.TapiOamUpdateOamJob;
import io.swagger.model.TapiOamUpdateOamProfile;
import io.swagger.model.TapiOamUpdateOamService;
import io.swagger.model.TapiOamUpdateOamServicePoint;
import io.swagger.model.TapiPathComputationComputeP2PPath;
import io.swagger.model.TapiPathComputationDeleteP2PPath;
import io.swagger.model.TapiPathComputationOptimizeP2PPath;
import io.swagger.model.TapiTopologyGetLinkDetails;
import io.swagger.model.TapiTopologyGetNodeDetails;
import io.swagger.model.TapiTopologyGetNodeEdgePointDetails;
import io.swagger.model.TapiTopologyGetTopologyDetails;
import io.swagger.model.TapiTopologyGetTopologyList;
import io.swagger.model.TapiVirtualNetworkCreateVirtualNetworkService;
import io.swagger.model.TapiVirtualNetworkDeleteVirtualNetworkService;
import io.swagger.model.TapiVirtualNetworkGetVirtualNetworkServiceDetails;
import io.swagger.model.TapiVirtualNetworkGetVirtualNetworkServiceList;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2019-08-08T12:17:00.417-03:00[America/Sao_Paulo]")
@Api(value = "operations", description = "the operations API")
public interface OperationsApi {

    @ApiOperation(value = "operates on tapi.path.computation.ComputeP2PPath", nickname = "operationsComputeP2PPathPost", notes = "operates on tapi.path.computation.ComputeP2PPath", response = TapiPathComputationComputeP2PPath.class, tags={ "tapi-path-computation", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Correct response", response = TapiPathComputationComputeP2PPath.class),
        @ApiResponse(code = 201, message = "No response"),
        @ApiResponse(code = 400, message = "Internal error") })
    @RequestMapping(value = "/operations/compute-p-2-p-path/",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<TapiPathComputationComputeP2PPath> operationsComputeP2PPathPost(@ApiParam(value = ""  )  @Valid @RequestBody Object body);


    @ApiOperation(value = "operates on tapi.connectivity.CreateConnectivityService", nickname = "operationsCreateConnectivityServicePost", notes = "operates on tapi.connectivity.CreateConnectivityService", response = TapiConnectivityCreateConnectivityService.class, tags={ "tapi-connectivity", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Correct response", response = TapiConnectivityCreateConnectivityService.class),
        @ApiResponse(code = 201, message = "No response"),
        @ApiResponse(code = 400, message = "Internal error") })
    @RequestMapping(value = "/operations/create-connectivity-service/",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<TapiConnectivityCreateConnectivityService> operationsCreateConnectivityServicePost(@ApiParam(value = ""  )  @Valid @RequestBody Object body);


    @ApiOperation(value = "operates on tapi.notification.CreateNotificationSubscriptionService", nickname = "operationsCreateNotificationSubscriptionServicePost", notes = "operates on tapi.notification.CreateNotificationSubscriptionService", response = TapiNotificationCreateNotificationSubscriptionService.class, tags={ "tapi-notification", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Correct response", response = TapiNotificationCreateNotificationSubscriptionService.class),
        @ApiResponse(code = 201, message = "No response"),
        @ApiResponse(code = 400, message = "Internal error") })
    @RequestMapping(value = "/operations/create-notification-subscription-service/",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<TapiNotificationCreateNotificationSubscriptionService> operationsCreateNotificationSubscriptionServicePost(@ApiParam(value = ""  )  @Valid @RequestBody Object body);


    @ApiOperation(value = "operates on tapi.oam.CreateOamJob", nickname = "operationsCreateOamJobPost", notes = "operates on tapi.oam.CreateOamJob", response = TapiOamCreateOamJob.class, tags={ "tapi-oam", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Correct response", response = TapiOamCreateOamJob.class),
        @ApiResponse(code = 201, message = "No response"),
        @ApiResponse(code = 400, message = "Internal error") })
    @RequestMapping(value = "/operations/create-oam-job/",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<TapiOamCreateOamJob> operationsCreateOamJobPost(@ApiParam(value = ""  )  @Valid @RequestBody Object body);


    @ApiOperation(value = "operates on tapi.oam.CreateOamProfile", nickname = "operationsCreateOamProfilePost", notes = "operates on tapi.oam.CreateOamProfile", response = TapiOamCreateOamProfile.class, tags={ "tapi-oam", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Correct response", response = TapiOamCreateOamProfile.class),
        @ApiResponse(code = 201, message = "No response"),
        @ApiResponse(code = 400, message = "Internal error") })
    @RequestMapping(value = "/operations/create-oam-profile/",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<TapiOamCreateOamProfile> operationsCreateOamProfilePost(@ApiParam(value = ""  )  @Valid @RequestBody Object body);


    @ApiOperation(value = "operates on tapi.oam.CreateOamServicePoint", nickname = "operationsCreateOamServicePointPost", notes = "operates on tapi.oam.CreateOamServicePoint", response = TapiOamCreateOamServicePoint.class, tags={ "tapi-oam", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Correct response", response = TapiOamCreateOamServicePoint.class),
        @ApiResponse(code = 201, message = "No response"),
        @ApiResponse(code = 400, message = "Internal error") })
    @RequestMapping(value = "/operations/create-oam-service-point/",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<TapiOamCreateOamServicePoint> operationsCreateOamServicePointPost(@ApiParam(value = ""  )  @Valid @RequestBody Object body);


    @ApiOperation(value = "operates on tapi.oam.CreateOamService", nickname = "operationsCreateOamServicePost", notes = "operates on tapi.oam.CreateOamService", response = TapiOamCreateOamService.class, tags={ "tapi-oam", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Correct response", response = TapiOamCreateOamService.class),
        @ApiResponse(code = 201, message = "No response"),
        @ApiResponse(code = 400, message = "Internal error") })
    @RequestMapping(value = "/operations/create-oam-service/",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<TapiOamCreateOamService> operationsCreateOamServicePost(@ApiParam(value = ""  )  @Valid @RequestBody Object body);


    @ApiOperation(value = "operates on tapi.virtual.network.CreateVirtualNetworkService", nickname = "operationsCreateVirtualNetworkServicePost", notes = "operates on tapi.virtual.network.CreateVirtualNetworkService", response = TapiVirtualNetworkCreateVirtualNetworkService.class, tags={ "tapi-virtual-network", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Correct response", response = TapiVirtualNetworkCreateVirtualNetworkService.class),
        @ApiResponse(code = 201, message = "No response"),
        @ApiResponse(code = 400, message = "Internal error") })
    @RequestMapping(value = "/operations/create-virtual-network-service/",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<TapiVirtualNetworkCreateVirtualNetworkService> operationsCreateVirtualNetworkServicePost(@ApiParam(value = ""  )  @Valid @RequestBody Object body);


    @ApiOperation(value = "operates on tapi.connectivity.DeleteConnectivityService", nickname = "operationsDeleteConnectivityServicePost", notes = "operates on tapi.connectivity.DeleteConnectivityService", tags={ "tapi-connectivity", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "No response"),
        @ApiResponse(code = 400, message = "Internal error") })
    @RequestMapping(value = "/operations/delete-connectivity-service/",
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<Void> operationsDeleteConnectivityServicePost(@ApiParam(value = ""  )  @Valid @RequestBody Object body);


    @ApiOperation(value = "operates on tapi.notification.DeleteNotificationSubscriptionService", nickname = "operationsDeleteNotificationSubscriptionServicePost", notes = "operates on tapi.notification.DeleteNotificationSubscriptionService", tags={ "tapi-notification", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "No response"),
        @ApiResponse(code = 400, message = "Internal error") })
    @RequestMapping(value = "/operations/delete-notification-subscription-service/",
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<Void> operationsDeleteNotificationSubscriptionServicePost(@ApiParam(value = ""  )  @Valid @RequestBody Object body);


    @ApiOperation(value = "operates on tapi.oam.DeleteOamJob", nickname = "operationsDeleteOamJobPost", notes = "operates on tapi.oam.DeleteOamJob", tags={ "tapi-oam", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "No response"),
        @ApiResponse(code = 400, message = "Internal error") })
    @RequestMapping(value = "/operations/delete-oam-job/",
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<Void> operationsDeleteOamJobPost(@ApiParam(value = ""  )  @Valid @RequestBody Object body);


    @ApiOperation(value = "operates on tapi.oam.DeleteOamProfile", nickname = "operationsDeleteOamProfilePost", notes = "operates on tapi.oam.DeleteOamProfile", tags={ "tapi-oam", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "No response"),
        @ApiResponse(code = 400, message = "Internal error") })
    @RequestMapping(value = "/operations/delete-oam-profile/",
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<Void> operationsDeleteOamProfilePost(@ApiParam(value = ""  )  @Valid @RequestBody Object body);


    @ApiOperation(value = "operates on tapi.oam.DeleteOamServicePoint", nickname = "operationsDeleteOamServicePointPost", notes = "operates on tapi.oam.DeleteOamServicePoint", tags={ "tapi-oam", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "No response"),
        @ApiResponse(code = 400, message = "Internal error") })
    @RequestMapping(value = "/operations/delete-oam-service-point/",
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<Void> operationsDeleteOamServicePointPost(@ApiParam(value = ""  )  @Valid @RequestBody Object body);


    @ApiOperation(value = "operates on tapi.oam.DeleteOamService", nickname = "operationsDeleteOamServicePost", notes = "operates on tapi.oam.DeleteOamService", tags={ "tapi-oam", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "No response"),
        @ApiResponse(code = 400, message = "Internal error") })
    @RequestMapping(value = "/operations/delete-oam-service/",
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<Void> operationsDeleteOamServicePost(@ApiParam(value = ""  )  @Valid @RequestBody Object body);


    @ApiOperation(value = "operates on tapi.path.computation.DeleteP2PPath", nickname = "operationsDeleteP2PPathPost", notes = "operates on tapi.path.computation.DeleteP2PPath", response = TapiPathComputationDeleteP2PPath.class, tags={ "tapi-path-computation", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Correct response", response = TapiPathComputationDeleteP2PPath.class),
        @ApiResponse(code = 201, message = "No response"),
        @ApiResponse(code = 400, message = "Internal error") })
    @RequestMapping(value = "/operations/delete-p-2-p-path/",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<TapiPathComputationDeleteP2PPath> operationsDeleteP2PPathPost(@ApiParam(value = ""  )  @Valid @RequestBody Object body);


    @ApiOperation(value = "operates on tapi.virtual.network.DeleteVirtualNetworkService", nickname = "operationsDeleteVirtualNetworkServicePost", notes = "operates on tapi.virtual.network.DeleteVirtualNetworkService", response = TapiVirtualNetworkDeleteVirtualNetworkService.class, tags={ "tapi-virtual-network", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Correct response", response = TapiVirtualNetworkDeleteVirtualNetworkService.class),
        @ApiResponse(code = 201, message = "No response"),
        @ApiResponse(code = 400, message = "Internal error") })
    @RequestMapping(value = "/operations/delete-virtual-network-service/",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<TapiVirtualNetworkDeleteVirtualNetworkService> operationsDeleteVirtualNetworkServicePost(@ApiParam(value = ""  )  @Valid @RequestBody Object body);


    @ApiOperation(value = "operates on tapi.connectivity.GetConnectionDetails", nickname = "operationsGetConnectionDetailsPost", notes = "operates on tapi.connectivity.GetConnectionDetails", response = TapiConnectivityGetConnectionDetails.class, tags={ "tapi-connectivity", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Correct response", response = TapiConnectivityGetConnectionDetails.class),
        @ApiResponse(code = 201, message = "No response"),
        @ApiResponse(code = 400, message = "Internal error") })
    @RequestMapping(value = "/operations/get-connection-details/",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<TapiConnectivityGetConnectionDetails> operationsGetConnectionDetailsPost(@ApiParam(value = ""  )  @Valid @RequestBody Object body);


    @ApiOperation(value = "operates on tapi.connectivity.GetConnectionEndPointDetails", nickname = "operationsGetConnectionEndPointDetailsPost", notes = "operates on tapi.connectivity.GetConnectionEndPointDetails", response = TapiConnectivityGetConnectionEndPointDetails.class, tags={ "tapi-connectivity", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Correct response", response = TapiConnectivityGetConnectionEndPointDetails.class),
        @ApiResponse(code = 201, message = "No response"),
        @ApiResponse(code = 400, message = "Internal error") })
    @RequestMapping(value = "/operations/get-connection-end-point-details/",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<TapiConnectivityGetConnectionEndPointDetails> operationsGetConnectionEndPointDetailsPost(@ApiParam(value = ""  )  @Valid @RequestBody Object body);


    @ApiOperation(value = "operates on tapi.connectivity.GetConnectivityServiceDetails", nickname = "operationsGetConnectivityServiceDetailsPost", notes = "operates on tapi.connectivity.GetConnectivityServiceDetails", response = TapiConnectivityGetConnectivityServiceDetails.class, tags={ "tapi-connectivity", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Correct response", response = TapiConnectivityGetConnectivityServiceDetails.class),
        @ApiResponse(code = 201, message = "No response"),
        @ApiResponse(code = 400, message = "Internal error") })
    @RequestMapping(value = "/operations/get-connectivity-service-details/",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<TapiConnectivityGetConnectivityServiceDetails> operationsGetConnectivityServiceDetailsPost(@ApiParam(value = ""  )  @Valid @RequestBody Object body);


    @ApiOperation(value = "", nickname = "operationsGetConnectivityServiceListPost", notes = "", response = TapiConnectivityGetConnectivityServiceList.class, tags={ "tapi-connectivity", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Correct response", response = TapiConnectivityGetConnectivityServiceList.class),
        @ApiResponse(code = 201, message = "No response"),
        @ApiResponse(code = 400, message = "Internal error") })
    @RequestMapping(value = "/operations/get-connectivity-service-list/",
        produces = { "application/json" }, 
        method = RequestMethod.POST)
    ResponseEntity<TapiConnectivityGetConnectivityServiceList> operationsGetConnectivityServiceListPost();


    @ApiOperation(value = "operates on tapi.topology.GetLinkDetails", nickname = "operationsGetLinkDetailsPost", notes = "operates on tapi.topology.GetLinkDetails", response = TapiTopologyGetLinkDetails.class, tags={ "tapi-topology", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Correct response", response = TapiTopologyGetLinkDetails.class),
        @ApiResponse(code = 201, message = "No response"),
        @ApiResponse(code = 400, message = "Internal error") })
    @RequestMapping(value = "/operations/get-link-details/",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<TapiTopologyGetLinkDetails> operationsGetLinkDetailsPost(@ApiParam(value = ""  )  @Valid @RequestBody Object body);


    @ApiOperation(value = "operates on tapi.oam.GetMeg", nickname = "operationsGetMegPost", notes = "operates on tapi.oam.GetMeg", response = TapiOamGetMeg.class, tags={ "tapi-oam", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Correct response", response = TapiOamGetMeg.class),
        @ApiResponse(code = 201, message = "No response"),
        @ApiResponse(code = 400, message = "Internal error") })
    @RequestMapping(value = "/operations/get-meg/",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<TapiOamGetMeg> operationsGetMegPost(@ApiParam(value = ""  )  @Valid @RequestBody Object body);


    @ApiOperation(value = "operates on tapi.topology.GetNodeDetails", nickname = "operationsGetNodeDetailsPost", notes = "operates on tapi.topology.GetNodeDetails", response = TapiTopologyGetNodeDetails.class, tags={ "tapi-topology", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Correct response", response = TapiTopologyGetNodeDetails.class),
        @ApiResponse(code = 201, message = "No response"),
        @ApiResponse(code = 400, message = "Internal error") })
    @RequestMapping(value = "/operations/get-node-details/",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<TapiTopologyGetNodeDetails> operationsGetNodeDetailsPost(@ApiParam(value = ""  )  @Valid @RequestBody Object body);


    @ApiOperation(value = "operates on tapi.topology.GetNodeEdgePointDetails", nickname = "operationsGetNodeEdgePointDetailsPost", notes = "operates on tapi.topology.GetNodeEdgePointDetails", response = TapiTopologyGetNodeEdgePointDetails.class, tags={ "tapi-topology", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Correct response", response = TapiTopologyGetNodeEdgePointDetails.class),
        @ApiResponse(code = 201, message = "No response"),
        @ApiResponse(code = 400, message = "Internal error") })
    @RequestMapping(value = "/operations/get-node-edge-point-details/",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<TapiTopologyGetNodeEdgePointDetails> operationsGetNodeEdgePointDetailsPost(@ApiParam(value = ""  )  @Valid @RequestBody Object body);


    @ApiOperation(value = "operates on tapi.notification.GetNotificationList", nickname = "operationsGetNotificationListPost", notes = "operates on tapi.notification.GetNotificationList", response = TapiNotificationGetNotificationList.class, tags={ "tapi-notification", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Correct response", response = TapiNotificationGetNotificationList.class),
        @ApiResponse(code = 201, message = "No response"),
        @ApiResponse(code = 400, message = "Internal error") })
    @RequestMapping(value = "/operations/get-notification-list/",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<TapiNotificationGetNotificationList> operationsGetNotificationListPost(@ApiParam(value = ""  )  @Valid @RequestBody Object body);


    @ApiOperation(value = "operates on tapi.notification.GetNotificationSubscriptionServiceDetails", nickname = "operationsGetNotificationSubscriptionServiceDetailsPost", notes = "operates on tapi.notification.GetNotificationSubscriptionServiceDetails", response = TapiNotificationGetNotificationSubscriptionServiceDetails.class, tags={ "tapi-notification", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Correct response", response = TapiNotificationGetNotificationSubscriptionServiceDetails.class),
        @ApiResponse(code = 201, message = "No response"),
        @ApiResponse(code = 400, message = "Internal error") })
    @RequestMapping(value = "/operations/get-notification-subscription-service-details/",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<TapiNotificationGetNotificationSubscriptionServiceDetails> operationsGetNotificationSubscriptionServiceDetailsPost(@ApiParam(value = ""  )  @Valid @RequestBody Object body);


    @ApiOperation(value = "", nickname = "operationsGetNotificationSubscriptionServiceListPost", notes = "", response = TapiNotificationGetNotificationSubscriptionServiceList.class, tags={ "tapi-notification", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Correct response", response = TapiNotificationGetNotificationSubscriptionServiceList.class),
        @ApiResponse(code = 201, message = "No response"),
        @ApiResponse(code = 400, message = "Internal error") })
    @RequestMapping(value = "/operations/get-notification-subscription-service-list/",
        produces = { "application/json" }, 
        method = RequestMethod.POST)
    ResponseEntity<TapiNotificationGetNotificationSubscriptionServiceList> operationsGetNotificationSubscriptionServiceListPost();


    @ApiOperation(value = "", nickname = "operationsGetOamJobListPost", notes = "", response = TapiOamGetOamJobList.class, tags={ "tapi-oam", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Correct response", response = TapiOamGetOamJobList.class),
        @ApiResponse(code = 201, message = "No response"),
        @ApiResponse(code = 400, message = "Internal error") })
    @RequestMapping(value = "/operations/get-oam-job-list/",
        produces = { "application/json" }, 
        method = RequestMethod.POST)
    ResponseEntity<TapiOamGetOamJobList> operationsGetOamJobListPost();


    @ApiOperation(value = "operates on tapi.oam.GetOamJob", nickname = "operationsGetOamJobPost", notes = "operates on tapi.oam.GetOamJob", response = TapiOamGetOamJob.class, tags={ "tapi-oam", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Correct response", response = TapiOamGetOamJob.class),
        @ApiResponse(code = 201, message = "No response"),
        @ApiResponse(code = 400, message = "Internal error") })
    @RequestMapping(value = "/operations/get-oam-job/",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<TapiOamGetOamJob> operationsGetOamJobPost(@ApiParam(value = ""  )  @Valid @RequestBody Object body);


    @ApiOperation(value = "", nickname = "operationsGetOamProfileListPost", notes = "", response = TapiOamGetOamProfileList.class, tags={ "tapi-oam", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Correct response", response = TapiOamGetOamProfileList.class),
        @ApiResponse(code = 201, message = "No response"),
        @ApiResponse(code = 400, message = "Internal error") })
    @RequestMapping(value = "/operations/get-oam-profile-list/",
        produces = { "application/json" }, 
        method = RequestMethod.POST)
    ResponseEntity<TapiOamGetOamProfileList> operationsGetOamProfileListPost();


    @ApiOperation(value = "operates on tapi.oam.GetOamProfile", nickname = "operationsGetOamProfilePost", notes = "operates on tapi.oam.GetOamProfile", response = TapiOamGetOamProfile.class, tags={ "tapi-oam", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Correct response", response = TapiOamGetOamProfile.class),
        @ApiResponse(code = 201, message = "No response"),
        @ApiResponse(code = 400, message = "Internal error") })
    @RequestMapping(value = "/operations/get-oam-profile/",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<TapiOamGetOamProfile> operationsGetOamProfilePost(@ApiParam(value = ""  )  @Valid @RequestBody Object body);


    @ApiOperation(value = "", nickname = "operationsGetOamServiceListPost", notes = "", response = TapiOamGetOamServiceList.class, tags={ "tapi-oam", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Correct response", response = TapiOamGetOamServiceList.class),
        @ApiResponse(code = 201, message = "No response"),
        @ApiResponse(code = 400, message = "Internal error") })
    @RequestMapping(value = "/operations/get-oam-service-list/",
        produces = { "application/json" }, 
        method = RequestMethod.POST)
    ResponseEntity<TapiOamGetOamServiceList> operationsGetOamServiceListPost();


    @ApiOperation(value = "operates on tapi.oam.GetOamServicePoint", nickname = "operationsGetOamServicePointPost", notes = "operates on tapi.oam.GetOamServicePoint", response = TapiOamGetOamServicePoint.class, tags={ "tapi-oam", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Correct response", response = TapiOamGetOamServicePoint.class),
        @ApiResponse(code = 201, message = "No response"),
        @ApiResponse(code = 400, message = "Internal error") })
    @RequestMapping(value = "/operations/get-oam-service-point/",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<TapiOamGetOamServicePoint> operationsGetOamServicePointPost(@ApiParam(value = ""  )  @Valid @RequestBody Object body);


    @ApiOperation(value = "operates on tapi.oam.GetOamService", nickname = "operationsGetOamServicePost", notes = "operates on tapi.oam.GetOamService", response = TapiOamGetOamService.class, tags={ "tapi-oam", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Correct response", response = TapiOamGetOamService.class),
        @ApiResponse(code = 201, message = "No response"),
        @ApiResponse(code = 400, message = "Internal error") })
    @RequestMapping(value = "/operations/get-oam-service/",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<TapiOamGetOamService> operationsGetOamServicePost(@ApiParam(value = ""  )  @Valid @RequestBody Object body);


    @ApiOperation(value = "operates on tapi.common.GetServiceInterfacePointDetails", nickname = "operationsGetServiceInterfacePointDetailsPost", notes = "operates on tapi.common.GetServiceInterfacePointDetails", response = TapiCommonGetServiceInterfacePointDetails.class, tags={ "tapi-common", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Correct response", response = TapiCommonGetServiceInterfacePointDetails.class),
        @ApiResponse(code = 201, message = "No response"),
        @ApiResponse(code = 400, message = "Internal error") })
    @RequestMapping(value = "/operations/get-service-interface-point-details/",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<TapiCommonGetServiceInterfacePointDetails> operationsGetServiceInterfacePointDetailsPost(@ApiParam(value = ""  )  @Valid @RequestBody Object body);


    @ApiOperation(value = "", nickname = "operationsGetServiceInterfacePointListPost", notes = "", response = TapiCommonGetServiceInterfacePointList.class, tags={ "tapi-common", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Correct response", response = TapiCommonGetServiceInterfacePointList.class),
        @ApiResponse(code = 201, message = "No response"),
        @ApiResponse(code = 400, message = "Internal error") })
    @RequestMapping(value = "/operations/get-service-interface-point-list/",
        produces = { "application/json" }, 
        method = RequestMethod.POST)
    ResponseEntity<TapiCommonGetServiceInterfacePointList> operationsGetServiceInterfacePointListPost();


    @ApiOperation(value = "", nickname = "operationsGetSupportedNotificationTypesPost", notes = "", response = TapiNotificationGetSupportedNotificationTypes.class, tags={ "tapi-notification", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Correct response", response = TapiNotificationGetSupportedNotificationTypes.class),
        @ApiResponse(code = 201, message = "No response"),
        @ApiResponse(code = 400, message = "Internal error") })
    @RequestMapping(value = "/operations/get-supported-notification-types/",
        produces = { "application/json" }, 
        method = RequestMethod.POST)
    ResponseEntity<TapiNotificationGetSupportedNotificationTypes> operationsGetSupportedNotificationTypesPost();


    @ApiOperation(value = "operates on tapi.topology.GetTopologyDetails", nickname = "operationsGetTopologyDetailsPost", notes = "operates on tapi.topology.GetTopologyDetails", response = TapiTopologyGetTopologyDetails.class, tags={ "tapi-topology", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Correct response", response = TapiTopologyGetTopologyDetails.class),
        @ApiResponse(code = 201, message = "No response"),
        @ApiResponse(code = 400, message = "Internal error") })
    @RequestMapping(value = "/operations/get-topology-details/",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<TapiTopologyGetTopologyDetails> operationsGetTopologyDetailsPost(@ApiParam(value = ""  )  @Valid @RequestBody Object body);


    @ApiOperation(value = "", nickname = "operationsGetTopologyListPost", notes = "", response = TapiTopologyGetTopologyList.class, tags={ "tapi-topology", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Correct response", response = TapiTopologyGetTopologyList.class),
        @ApiResponse(code = 201, message = "No response"),
        @ApiResponse(code = 400, message = "Internal error") })
    @RequestMapping(value = "/operations/get-topology-list/",
        produces = { "application/json" }, 
        method = RequestMethod.POST)
    ResponseEntity<TapiTopologyGetTopologyList> operationsGetTopologyListPost();


    @ApiOperation(value = "operates on tapi.virtual.network.GetVirtualNetworkServiceDetails", nickname = "operationsGetVirtualNetworkServiceDetailsPost", notes = "operates on tapi.virtual.network.GetVirtualNetworkServiceDetails", response = TapiVirtualNetworkGetVirtualNetworkServiceDetails.class, tags={ "tapi-virtual-network", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Correct response", response = TapiVirtualNetworkGetVirtualNetworkServiceDetails.class),
        @ApiResponse(code = 201, message = "No response"),
        @ApiResponse(code = 400, message = "Internal error") })
    @RequestMapping(value = "/operations/get-virtual-network-service-details/",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<TapiVirtualNetworkGetVirtualNetworkServiceDetails> operationsGetVirtualNetworkServiceDetailsPost(@ApiParam(value = ""  )  @Valid @RequestBody Object body);


    @ApiOperation(value = "", nickname = "operationsGetVirtualNetworkServiceListPost", notes = "", response = TapiVirtualNetworkGetVirtualNetworkServiceList.class, tags={ "tapi-virtual-network", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Correct response", response = TapiVirtualNetworkGetVirtualNetworkServiceList.class),
        @ApiResponse(code = 201, message = "No response"),
        @ApiResponse(code = 400, message = "Internal error") })
    @RequestMapping(value = "/operations/get-virtual-network-service-list/",
        produces = { "application/json" }, 
        method = RequestMethod.POST)
    ResponseEntity<TapiVirtualNetworkGetVirtualNetworkServiceList> operationsGetVirtualNetworkServiceListPost();


    @ApiOperation(value = "operates on tapi.path.computation.OptimizeP2PPath", nickname = "operationsOptimizeP2PPathPost", notes = "operates on tapi.path.computation.OptimizeP2PPath", response = TapiPathComputationOptimizeP2PPath.class, tags={ "tapi-path-computation", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Correct response", response = TapiPathComputationOptimizeP2PPath.class),
        @ApiResponse(code = 201, message = "No response"),
        @ApiResponse(code = 400, message = "Internal error") })
    @RequestMapping(value = "/operations/optimize-p-2-p-path/",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<TapiPathComputationOptimizeP2PPath> operationsOptimizeP2PPathPost(@ApiParam(value = ""  )  @Valid @RequestBody Object body);


    @ApiOperation(value = "operates on tapi.connectivity.UpdateConnectivityService", nickname = "operationsUpdateConnectivityServicePost", notes = "operates on tapi.connectivity.UpdateConnectivityService", response = TapiConnectivityUpdateConnectivityService.class, tags={ "tapi-connectivity", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Correct response", response = TapiConnectivityUpdateConnectivityService.class),
        @ApiResponse(code = 201, message = "No response"),
        @ApiResponse(code = 400, message = "Internal error") })
    @RequestMapping(value = "/operations/update-connectivity-service/",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<TapiConnectivityUpdateConnectivityService> operationsUpdateConnectivityServicePost(@ApiParam(value = ""  )  @Valid @RequestBody Object body);


    @ApiOperation(value = "operates on tapi.notification.UpdateNotificationSubscriptionService", nickname = "operationsUpdateNotificationSubscriptionServicePost", notes = "operates on tapi.notification.UpdateNotificationSubscriptionService", response = TapiNotificationUpdateNotificationSubscriptionService.class, tags={ "tapi-notification", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Correct response", response = TapiNotificationUpdateNotificationSubscriptionService.class),
        @ApiResponse(code = 201, message = "No response"),
        @ApiResponse(code = 400, message = "Internal error") })
    @RequestMapping(value = "/operations/update-notification-subscription-service/",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<TapiNotificationUpdateNotificationSubscriptionService> operationsUpdateNotificationSubscriptionServicePost(@ApiParam(value = ""  )  @Valid @RequestBody Object body);


    @ApiOperation(value = "operates on tapi.oam.UpdateOamJob", nickname = "operationsUpdateOamJobPost", notes = "operates on tapi.oam.UpdateOamJob", response = TapiOamUpdateOamJob.class, tags={ "tapi-oam", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Correct response", response = TapiOamUpdateOamJob.class),
        @ApiResponse(code = 201, message = "No response"),
        @ApiResponse(code = 400, message = "Internal error") })
    @RequestMapping(value = "/operations/update-oam-job/",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<TapiOamUpdateOamJob> operationsUpdateOamJobPost(@ApiParam(value = ""  )  @Valid @RequestBody Object body);


    @ApiOperation(value = "operates on tapi.oam.UpdateOamProfile", nickname = "operationsUpdateOamProfilePost", notes = "operates on tapi.oam.UpdateOamProfile", response = TapiOamUpdateOamProfile.class, tags={ "tapi-oam", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Correct response", response = TapiOamUpdateOamProfile.class),
        @ApiResponse(code = 201, message = "No response"),
        @ApiResponse(code = 400, message = "Internal error") })
    @RequestMapping(value = "/operations/update-oam-profile/",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<TapiOamUpdateOamProfile> operationsUpdateOamProfilePost(@ApiParam(value = ""  )  @Valid @RequestBody Object body);


    @ApiOperation(value = "operates on tapi.oam.UpdateOamServicePoint", nickname = "operationsUpdateOamServicePointPost", notes = "operates on tapi.oam.UpdateOamServicePoint", response = TapiOamUpdateOamServicePoint.class, tags={ "tapi-oam", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Correct response", response = TapiOamUpdateOamServicePoint.class),
        @ApiResponse(code = 201, message = "No response"),
        @ApiResponse(code = 400, message = "Internal error") })
    @RequestMapping(value = "/operations/update-oam-service-point/",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<TapiOamUpdateOamServicePoint> operationsUpdateOamServicePointPost(@ApiParam(value = ""  )  @Valid @RequestBody Object body);


    @ApiOperation(value = "operates on tapi.oam.UpdateOamService", nickname = "operationsUpdateOamServicePost", notes = "operates on tapi.oam.UpdateOamService", response = TapiOamUpdateOamService.class, tags={ "tapi-oam", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Correct response", response = TapiOamUpdateOamService.class),
        @ApiResponse(code = 201, message = "No response"),
        @ApiResponse(code = 400, message = "Internal error") })
    @RequestMapping(value = "/operations/update-oam-service/",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<TapiOamUpdateOamService> operationsUpdateOamServicePost(@ApiParam(value = ""  )  @Valid @RequestBody Object body);


    @ApiOperation(value = "operates on tapi.common.UpdateServiceInterfacePoint", nickname = "operationsUpdateServiceInterfacePointPost", notes = "operates on tapi.common.UpdateServiceInterfacePoint", tags={ "tapi-common", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "No response"),
        @ApiResponse(code = 400, message = "Internal error") })
    @RequestMapping(value = "/operations/update-service-interface-point/",
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<Void> operationsUpdateServiceInterfacePointPost(@ApiParam(value = ""  )  @Valid @RequestBody Object body);

}
